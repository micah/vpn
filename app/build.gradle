plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 35
    namespace 'org.torproject.vpn'

    defaultConfig {
        applicationId "org.torproject.vpn"
        minSdk 24
        targetSdk 34
        versionCode 10
        versionName "0.8.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            if (System.getenv('ANDROID_KEY_STOREFILE') != null &&
                    System.getenv('ANDROID_KEYSTORE_PASSWORD') != null &&
                    System.getenv('ANDROID_KEY_ALIAS') != null &&
                    System.getenv('ANDROID_KEYSTORE_PASSWORD') != null) {
                storeFile file(System.getenv('ANDROID_KEY_STOREFILE'))
                storePassword System.getenv('ANDROID_KEYSTORE_PASSWORD')
                keyAlias System.getenv('ANDROID_KEY_ALIAS')
                keyPassword System.getenv('ANDROID_KEYSTORE_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if('main'.equals(System.getenv('CI_DEFAULT_BRANCH'))) {
              signingConfig signingConfigs.release
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        dataBinding true
        buildConfig true
    }

    task wrapper(type: Wrapper){
        gradleVersion = '8.2.1'
    }

    tasks.register("prepareKotlinBuildScriptModel"){}

    lint {
       disable 'MissingTranslation'
    }


}

dependencies {

    // Kotlin
    implementation "com.squareup.retrofit2:retrofit:2.11.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.7"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.8.4"
    implementation "androidx.navigation:navigation-ui-ktx:2.8.4"
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.4'
    implementation "com.google.android.material:material:1.12.0"
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'androidx.webkit:webkit:1.12.1'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    implementation 'androidx.webkit:webkit:1.12.1'
    kapt 'com.github.bumptech.glide:compiler:4.16.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:3.0-alpha-1'
    implementation 'com.netzarchitekten:IPtProxy:3.8.2'


    // Testing
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib"
    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test:core-ktx:1.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.2.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.6.1'
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.6.1";

    testImplementation 'androidx.test:core:1.6.1'
    testImplementation 'androidx.test.ext:junit:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    testImplementation 'androidx.test.espresso:espresso-intents:3.6.1'
    testImplementation 'androidx.test.ext:truth:1.6.0'

    androidTestImplementation 'tools.fastlane:screengrab:2.1.1'
    testImplementation 'tools.fastlane:screengrab:2.1.1'

    // if onionmasq was built locally, the lib can be integrated like this
    // implementation fileTree(dir: "libs", include: ["onionmasq-debug.aar"])
    debugImplementation 'org.torproject:onionmasq:main-branch-debug'
    releaseImplementation 'org.torproject:onionmasq:0.8.0-local-release'
    //tried this, still not sure we require this so commented for time being.
/*    implementation("androidx.datastore:datastore-preferences:1.0.0")*/

}
